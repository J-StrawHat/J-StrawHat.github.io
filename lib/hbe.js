(()=>{"use strict";const e=window.crypto||window.msCrypto,t=window.localStorage,n="hexo-blog-encrypt:#"+window.location.pathname,o=y("hexo-blog-encrypt的作者们都是大帅比!"),r=y("hexo-blog-encrypt是地表最强Hexo加密插件!"),a=document.getElementById("hexo-blog-encrypt"),i=a.dataset.wpm,c=a.dataset.whm,s=a.getElementsByTagName("script").hbeData,l=s.innerText,d=s.dataset.hmacdigest;function u(e){return new Uint8Array(e.match(/[\da-f]{2}/gi).map((e=>parseInt(e,16))))}function y(e){for(var t=e.length,n=0,o=new Array,r=0;r<t;){var a=e.codePointAt(r);a<128?(o[n++]=a,r++):a>127&&a<2048?(o[n++]=a>>6|192,o[n++]=63&a|128,r++):a>2047&&a<65536?(o[n++]=a>>12|224,o[n++]=a>>6&63|128,o[n++]=63&a|128,r++):(o[n++]=a>>18|240,o[n++]=a>>12&63|128,o[n++]=a>>6&63|128,o[n++]=63&a|128,r+=2)}return new Uint8Array(o)}function h(e){if("object"!=typeof e||null===e||"number"!=typeof e.byteLength)throw new TypeError("Expected input to be an ArrayBuffer");for(var t,n=new Uint8Array(e),o="",r=0;r<n.length;r++)o+=1===(t=n[r].toString(16)).length?"0"+t:t;return o}async function m(e){let t=document.createElement("div");return t.innerHTML=e,t.querySelectorAll("script").forEach((async e=>{e.replaceWith(await async function(e){let t=document.createElement("script");return["type","text","src","crossorigin","defer","referrerpolicy"].forEach((n=>{e[n]&&(t[n]=e[n])})),t}(e))})),t}async function f(t,o,r){let a=u(l);return await e.subtle.decrypt({name:"AES-CBC",iv:o},t,a.buffer).then((async t=>{const o=(new TextDecoder).decode(t);if(!o.startsWith("<hbe-prefix></hbe-prefix>"))throw"Decode successfully but not start with KnownPrefix.";const a=document.createElement("button");a.textContent="Encrypt again",a.type="button",a.classList.add("hbe-button"),a.addEventListener("click",(()=>{window.localStorage.removeItem(n),window.location.reload()})),document.getElementById("hexo-blog-encrypt").style.display="inline",document.getElementById("hexo-blog-encrypt").innerHTML="",document.getElementById("hexo-blog-encrypt").appendChild(await m(o)),document.getElementById("hexo-blog-encrypt").appendChild(a),document.querySelectorAll("img").forEach((e=>{e.getAttribute("data-src")&&!e.src&&(e.src=e.getAttribute("data-src"))})),window.NexT&&NexT.boot&&"function"==typeof NexT.boot.refresh&&NexT.boot.refresh();var i=document.getElementById("toc-div");i&&(i.style.display="inline");var s=document.getElementsByClassName("toc-div-class");if(s&&s.length>0)for(var l=0;l<s.length;l++)s[l].style.display="inline";return await async function(t,n){const o=(new TextEncoder).encode(n);let r=u(d);const a=await e.subtle.verify({name:"HMAC",hash:"SHA-256"},t,r,o);return console.log(`Verification result: ${a}`),a||(Snackbar.show({text:c,pos:"bottom-left"}),console.log(`${c}, got `,r," but proved wrong.")),a}(r,o)})).catch((e=>(Snackbar.show({text:i,pos:"bottom-left"}),console.log(e),!1)))}!function(){const i=JSON.parse(t.getItem(n));if(i){console.log(`Password got from localStorage(${n}): `,i);const o=u(i.iv).buffer,r=i.dk,a=i.hmk;e.subtle.importKey("jwk",r,{name:"AES-CBC",length:256},!0,["decrypt"]).then((r=>{e.subtle.importKey("jwk",a,{name:"HMAC",hash:"SHA-256",length:256},!0,["verify"]).then((e=>{f(r,o,e).then((e=>{e||t.removeItem(n)}))}))}))}a.addEventListener("keydown",(async a=>{if(a.isComposing||13===a.keyCode){const a=document.getElementById("hbePass").value,i=await function(t){let n=new TextEncoder;return e.subtle.importKey("raw",n.encode(t),{name:"PBKDF2"},!1,["deriveKey","deriveBits"])}(a),c=await function(t){return e.subtle.deriveKey({name:"PBKDF2",hash:"SHA-256",salt:o.buffer,iterations:1024},t,{name:"HMAC",hash:"SHA-256",length:256},!0,["verify"])}(i),s=await function(t){return e.subtle.deriveKey({name:"PBKDF2",hash:"SHA-256",salt:o.buffer,iterations:1024},t,{name:"AES-CBC",length:256},!0,["decrypt"])}(i),l=await function(t){return e.subtle.deriveBits({name:"PBKDF2",hash:"SHA-256",salt:r.buffer,iterations:512},t,128)}(i);f(s,l,c).then((o=>{console.log(`Decrypt result: ${o}`),o&&e.subtle.exportKey("jwk",s).then((o=>{e.subtle.exportKey("jwk",c).then((e=>{const r={dk:o,iv:h(l),hmk:e};t.setItem(n,JSON.stringify(r))}))}))}))}}))}()})();